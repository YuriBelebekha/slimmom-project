{"version":3,"file":"static/js/703.e3017ab5.chunk.js","mappings":"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","sources":["components/HeroForm/HeroForm.styled.jsx","components/ButtonSubmit/ButtonSubmit.styled.jsx","components/ButtonSubmit/ButtonSubmit.jsx","components/HeroForm/HeroForm.jsx","pages/Home.jsx"],"sourcesContent":["import { Form, Field, ErrorMessage } from 'formik';\nimport { Typography } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { theme } from '../../constants/theme';\n\nexport const Title = styled(Typography)`\n  max-width: 280px;\n  margin-bottom: 34px;\n\n  font-family: VerdanaBold;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 25px;\n\n  ${theme.breakpoints.up('tablet')} {\n    max-width: 530px;\n    margin-bottom: 68px;\n\n    font-size: 34px;\n    line-height: 48px;\n  };\n`;\n\nexport const FormCss = styled(Form)`  \n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 240px;\n\n  ${theme.breakpoints.up('tablet')} {\n    max-width: 530px;\n    align-items: start;\n  };\n\n  ${theme.breakpoints.up('desktop')} {\n    max-width: 530px;\n    align-items: end;\n  };\n`;\n\nexport const InputWrapperCss = styled.div`\n  display: flex;\n  column-gap: 32px;\n  flex-wrap: wrap;\n  margin-bottom: 8px;\n\n  ${theme.breakpoints.up('tablet')} {\n    margin-bottom: 28px;\n  };\n`;\n\nexport const InputSectionCss = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FieldCss = styled(Field)`\n  width: 240px;\n  padding: 4px 0;\n  margin-bottom: 32px;\n\n  background-color: transparent;\n  \n  border-top: none;\n  border-left: none;\n  border-bottom: 1px solid;\n  border-right: none;\n  border-color: ${theme.palette.primary.grey};\n  outline: none;  \n\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n\n  transition: border-color ${theme.transitions.duration.standard}ms ${theme.transitions.easing.easeOut};\n\n  &:hover,\n  &:focus {\n    border-color: ${theme.palette.primary.accent};\n  };\n  \n  & ~ span {\n    position: absolute;\n    top: 0;\n    left: 0;\n  };\n\n  &:focus ~ span,\n  &:not(:focus):valid ~ span {\n    top: -16px;\n    font-size: 10px;\n    line-height: 14px;\n    color: ${theme.palette.primary.accent};\n  };\n`;\n\nexport const ErrorMessageCss = styled(ErrorMessage)`\n  position: absolute;\n  top: 30px;\n  left: 0;\n  max-width: 240px;\n  font-size: 7px;\n  line-height: 10px;\n  color: ${theme.palette.primary.errorMessage};\n`;\n\nexport const FieldsetCss = styled.fieldset`\n  border: none;\n  margin: 0;\n  padding: 0;\n  \n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: ${theme.palette.primary.darkGrey};  \n`;\n\nexport const LabelCss = styled.label`\n  position: relative;\n\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: ${theme.palette.primary.darkGrey};  \n`;\n\nexport const RadioBtnBoxCss = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n  margin-bottom: 40px;\n\n  & > label {\n    display: flex;\n    align-items: center;    \n  };\n\n  & > label > span {\n    margin-left: 4px;\n  };\n\n  ${theme.breakpoints.up('tablet')} {\n    padding-top: 8px;\n    border-top: 1px solid ${theme.palette.primary.grey};\n  };\n`;\n\nexport const RadioBtnCss = styled(Field)`\n  width: 20px;\n  height: 20px;\n\n  &:checked {\n    appearance: none;\n    border: 5px solid ${theme.palette.primary.white};\n    border-radius: 50%;\n    box-shadow: ${theme.palette.primary.darkGrey} 0 0 0 1px;\n    background: ${theme.palette.primary.accent};\n\n    & ~ span {\n      color: ${theme.palette.primary.accent};\n    };\n  };\n`;","import { Button } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { theme } from '../../constants/theme';\n\nexport const ButtonCss = styled(Button)`\n  min-width: 180px;\n  padding: 13px 22px;\n\n  font-family: verdanaBold;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  text-transform: capitalize;\n\n  background-color: ${({ theme }) => theme.palette.primary.accent};\n  border-radius: 30px;\n  box-shadow: 0px 4px 10px 0px ${theme.palette.primary.accent};\n\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.palette.primary.accent};\n    box-shadow: 0px 2px 5px 0px ${theme.palette.primary.accent};\n  };\n`;","import { ButtonCss } from './ButtonSubmit.styled';\n\nexport const ButtonSubmit = ({ name }) => {  \n  return (\n    <ButtonCss type=\"submit\" variant=\"contained\" >\n      {name}\n    </ButtonCss>\n  )\n};","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Box } from '@mui/material';\nimport {\n  FormCss,\n  FieldCss,\n  ErrorMessageCss,\n  Title,\n  InputWrapperCss,\n  InputSectionCss,\n  FieldsetCss,\n  LabelCss,\n  RadioBtnBoxCss,\n  RadioBtnCss\n} from './HeroForm.styled';\nimport { ButtonSubmit } from '../ButtonSubmit/ButtonSubmit';\n\nconst heroFormValidationSchema = yup.object().shape({\n  height:\n    yup\n      .number()\n      .integer('An integer value must be entered')\n      .min(120, 'The entered value must not be less than 120 (cm)')\n      .max(220, 'The entered value should not exceed 220 (cm)')\n      .required('Entering this value is required'),\n  age:\n    yup\n      .number()\n      .integer('An integer value must be entered')\n      .min(18, 'The entered value must not be less than 18 (years)')\n      .max(70, 'The entered value should not exceed 70 (years)')\n      .required('Entering this value is required'),\n  currentWeight:\n    yup\n      .number()\n      .integer('An integer value must be entered')\n      .min(35, 'The entered value must not be less than 35 (kg)')\n      .max(180, 'The entered value should not exceed 180 (kg)')\n      .required('Entering this value is required'),\n  desiredWeight:\n    yup\n      .number()\n      .integer('An integer value must be entered')\n      .min(35, 'The entered value must not be less than 35 (kg)')\n      .max(180, 'The entered value should not exceed 180 (kg)')\n      .required('Entering this value is required'),\n  bloodType:\n    yup\n      .string()\n      .required('Entering this value is required'),\n});\n\nconst initialValues = {\n  height: '',\n  age: '',\n  currentWeight: '',\n  desiredWeight: '',\n  bloodType: '1',\n};\n\nexport const HeroForm = () => {\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    resetForm();\n  };\n  \n  return (\n    <Box component=\"section\">\n      <Title component=\"h1\">\n        Calculate your daily calorie intake right now\n      </Title>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={heroFormValidationSchema}\n        onSubmit={handleSubmit}\n      >\n        <FormCss autoComplete='off'>\n          <InputWrapperCss>\n            <InputSectionCss>\n              <LabelCss htmlFor=\"height\">\n                <FieldCss\n                  type=\"number\"\n                  min=\"120\"\n                  max=\"220\"\n                  name=\"height\"\n                  required\n                />\n                <span>Height *</span>\n                <ErrorMessageCss component=\"div\" name=\"height\" />\n              </LabelCss>\n              \n              <LabelCss htmlFor=\"age\">\n                <FieldCss\n                  type=\"number\"\n                  min=\"18\"\n                  max=\"70\"\n                  name=\"age\"\n                  required\n                />\n                <span>Age *</span>\n                <ErrorMessageCss component=\"div\" name=\"age\" />\n              </LabelCss>\n\n              <LabelCss htmlFor=\"currentWeight\">\n                <FieldCss\n                  type=\"number\"\n                  min=\"35\"\n                  max=\"180\"\n                  name=\"currentWeight\"\n                  required\n                />\n                <span>Current weight *</span>\n                <ErrorMessageCss component=\"div\" name=\"currentWeight\" />\n              </LabelCss>\n            </InputSectionCss>\n\n            <InputSectionCss>\n              <LabelCss htmlFor=\"desiredWeight\">\n                <FieldCss\n                  type=\"number\"\n                  min=\"35\"\n                  max=\"180\"\n                  name=\"desiredWeight\"\n                  required\n                />\n                <span>Desired weight *</span>\n                <ErrorMessageCss component=\"div\" name=\"desiredWeight\" />\n              </LabelCss>            \n\n              <FieldsetCss>\n                <legend>Blood type *</legend>\n\n                <RadioBtnBoxCss>\n                  <label htmlFor=\"1\">\n                    <RadioBtnCss\n                      type=\"radio\"\n                      value=\"1\"\n                      name=\"bloodType\"\n                    />\n                    <span>1</span>\n                  </label>\n\n                  <label htmlFor=\"2\">\n                    <RadioBtnCss\n                      type=\"radio\"\n                      value=\"2\"\n                      name=\"bloodType\"\n                    />\n                    <span>2</span>\n                  </label>\n\n                  <label htmlFor=\"3\">\n                    <RadioBtnCss\n                      type=\"radio\"\n                      value=\"3\"\n                      name=\"bloodType\"\n                    />\n                    <span>3</span>\n                  </label>\n                  \n                  <label htmlFor=\"4\">\n                    <RadioBtnCss\n                      type=\"radio\"\n                      value=\"4\"\n                      name=\"bloodType\"\n                    />\n                    <span>4</span>\n                  </label>\n                </RadioBtnBoxCss>\n                \n                <ErrorMessageCss component=\"div\" name=\"bloodType\" />  \n              </FieldsetCss>\n            </InputSectionCss>\n          </InputWrapperCss>\n          \n          <ButtonSubmit name=\"Start losing weight\" />\n        </FormCss>\n      </Formik>\n    </Box>\n  );\n};","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\n// import { Box } from '@mui/material';\n// import { VisuallyHiddenH1 } from '../components/VisuallyHidden/VisuallyHidden.styled';\nimport { HeroForm } from '../components/HeroForm';\n\nconst Home = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>SlimMom | Home</title>\n      </Helmet>\n      \n      <HeroForm />\n    </HelmetProvider>\n  )\n};\n\nexport default Home;"],"names":["Title","styled","Typography","theme","FormCss","Form","InputWrapperCss","InputSectionCss","FieldCss","Field","ErrorMessageCss","ErrorMessage","FieldsetCss","LabelCss","RadioBtnBoxCss","RadioBtnCss","ButtonCss","Button","palette","primary","accent","ButtonSubmit","name","type","variant","heroFormValidationSchema","yup","shape","height","integer","min","max","required","age","currentWeight","desiredWeight","bloodType","initialValues","HeroForm","Box","component","validationSchema","onSubmit","values","resetForm","console","log","autoComplete","htmlFor","value"],"sourceRoot":""}