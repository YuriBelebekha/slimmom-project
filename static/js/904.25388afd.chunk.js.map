{"version":3,"file":"static/js/904.25388afd.chunk.js","mappings":"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","sources":["components/CalculateForm/CalculateForm.styled.jsx","components/CalculateForm/CalculateForm.jsx","pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  Box,\n  Typography,\n  TextField,\n  FormControl,\n  Button,\n  Modal,\n} from '@mui/material';\nimport { theme } from '../../constants/theme';\n\nexport const SectionCss = styled(Box)`\n  max-width: 280px;\n\n  ${theme.breakpoints.up('tablet')} {\n    max-width: 530px;\n  }\n`;\n\nexport const TitleCss = styled(Typography)`\n  text-align: center;\n  margin-bottom: 42px;\n  text-align: left;\n\n  font-family: VerdanaBold;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 25px;\n  color: ${theme.palette.primary.main};\n\n  ${theme.breakpoints.up('tablet')} {\n    margin-bottom: 60px;\n\n    font-size: 34px;\n    line-height: 48px;\n    text-align: left;\n  }\n`;\n\nexport const FormCss = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${theme.breakpoints.up('tablet')} {\n    align-items: start;\n  }\n\n  ${theme.breakpoints.up('desktop')} {\n    align-items: end;\n  }\n`;\n\nexport const TextFieldCss = styled(TextField)`\n  width: 280px;\n  padding: 4px 0;\n  margin-bottom: 32px;\n\n  & label {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n  }\n\n  & label.Mui-focused {\n    color: ${theme.palette.primary.accent};\n  }\n\n  & .MuiInput-underline:after {\n    border-bottom-color: ${theme.palette.primary.accent};\n  }\n\n  & .MuiInput-root {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n    background: transparent;\n  }\n\n  & .MuiFormHelperText-root {\n    position: absolute;\n    bottom: -20px;\n  }\n\n  ${theme.breakpoints.up('tablet')} {\n    width: 240px;\n  }\n`;\n\nexport const InputWrapperCss = styled(Box)`\n  display: flex;\n  flex-direction: column;\n\n  ${theme.breakpoints.up('tablet')} {\n    flex-direction: row;\n    margin-bottom: 38px;\n  }\n`;\n\nexport const InputGroupBoxCss = styled(Box)`\n  display: flex;\n  flex-direction: column;\n\n  ${theme.breakpoints.up('tablet')} {\n    &:last-child {\n      margin-left: 32px;\n    }\n  }\n\n  ${theme.breakpoints.up('desktop')} {\n    &:last-child {\n      margin-right: 18px;\n    }\n  }\n`;\n\nexport const FormControlCss = styled(FormControl)`\n  margin-bottom: 40px;\n\n  & label.Mui-focused {\n    color: ${theme.palette.primary.accent};\n  }\n\n  & > label {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n  }\n\n  & .MuiFormControlLabel-root > .Mui-checked {\n    color: ${theme.palette.primary.accent};\n\n    & ~ .MuiTypography-root {\n      color: ${theme.palette.primary.accent};\n    }\n  }\n\n  & .MuiTypography-root {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n  }\n\n  ${theme.breakpoints.up('tablet')} {\n    margin-bottom: 0;\n\n    & > label {\n      padding-top: 20px;\n      padding-bottom: 11px;\n      border-bottom: 1px solid ${theme.palette.primary.darkGrey};\n    }\n  }\n`;\n\nexport const ButtonSubmitCss = styled(Button)`\n  min-width: 180px;\n  padding: 13px 22px;\n\n  font-family: verdanaBold;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  text-transform: capitalize;\n  color: ${theme.palette.primary.white};\n\n  background-color: ${({ theme }) => theme.palette.primary.accent};\n  border-radius: 30px;\n  box-shadow: 0px 4px 10px 0px ${theme.palette.primary.accent};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.palette.primary.accent};\n    box-shadow: 0px 2px 5px 0px ${theme.palette.primary.accent};\n  }\n`;\n\nexport const ModalCss = styled(Modal)`\n  .MuiModal-backdrop {\n    background-color: transparent;\n  }\n\n  ${theme.breakpoints.up('tablet')} {\n    .MuiModal-backdrop {\n      background-color: ${theme.palette.primary.modalBackdrop};\n    }\n  }\n`;\n\nexport const ModalBoxContentCss = styled(Box)`\n  height: 100vh;\n  margin-top: 120px;\n  padding: 40px 20px 120px;\n  background-color: ${theme.palette.primary.white};\n\n  ${theme.breakpoints.up('tablet')} {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 510px;\n    height: 570px;\n    padding: 64px 80px;\n  }\n`;\n\nexport const KeyboardReturnIconWrapperCss = styled(Box)`\n  position: absolute;\n  top: 82px;\n  left: 0;\n  width: 100%;\n  height: 40px;\n  padding-top: 10px;\n  pointer-events: none;\n  background-color: ${theme.palette.primary.bgcUserBlock};\n\n  & svg {\n    margin-left: 20px;\n  }\n\n  ${theme.breakpoints.up('tablet')} {\n    display: none;\n  }\n`;\n\nexport const KcalValueTextCss = styled(Typography)`\n  margin-bottom: 32px;\n\n  font-family: VerdanaBold;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 68px;\n  letter-spacing: 0.04em;\n  color: ${theme.palette.secondary.accent};\n  text-align: center;\n\n  & span {\n    font-size: 16px;\n    line-height: 19px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport * as React from 'react';\nimport { FixedSizeList } from 'react-window';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { getDailyRate } from 'redux/dailyRate/dailyRateOperations';\nimport KeyboardReturnIcon from '@mui/icons-material/KeyboardReturn';\nimport { useDailyRate } from 'hooks';\n\nimport {\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  FormLabel,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n} from '@mui/material';\nimport {\n  SectionCss,\n  TitleCss,\n  FormCss,\n  TextFieldCss,\n  InputWrapperCss,\n  InputGroupBoxCss,\n  FormControlCss,\n  ButtonSubmitCss,\n  ModalCss,\n  ModalBoxContentCss,\n  KeyboardReturnIconWrapperCss,\n  KcalValueTextCss,\n} from './CalculateForm.styled';\n// import { ButtonSubmit } from '../ButtonSubmit/ButtonSubmit';\n\nconst calculateFormValidationSchema = yup.object().shape({\n  height: yup\n    .number('Enter your height')\n    .integer('An integer value must be entered')\n    .min(120, 'Value must not be less than 120 (cm)')\n    .max(220, 'Value should not exceed 220 (cm)')\n    .required('Height is required'),\n  age: yup\n    .number('Enter your age')\n    .integer('An integer value must be entered')\n    .min(18, 'Value must not be less than 18 (years)')\n    .max(70, 'Value should not exceed 70 (years)')\n    .required('Age is required'),\n  currentWeight: yup\n    .number('Enter your current weight')\n    .integer('An integer value must be entered')\n    .min(35, 'Value must not be less than 35 (kg)')\n    .max(180, 'Value should not exceed 180 (kg)')\n    .required('Current weight is required'),\n  desiredWeight: yup\n    .number('Enter your desired weight')\n    .integer('An integer value must be entered')\n    .min(35, 'Value must not be less than 35 (kg)')\n    .max(180, 'Value should not exceed 180 (kg)')\n    .required('Desired weight is required'),\n  bloodType: yup\n    .string('Enter your blood type')\n    .required('Blood type is required'),\n});\n\nexport const CalculateForm = () => {\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const {\n    dailyRate: { dailyRate, notAllowedProducts },\n  } = useDailyRate();\n\n  function renderRow(props) {\n    const { index, style } = props;\n\n    return (\n      <ListItem style={style} key={index} component=\"div\" disablePadding>\n        <ListItemButton>\n          <ListItemText primary={`${index + 1}. Item`} />\n        </ListItemButton>\n      </ListItem>\n    );\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      height: '',\n      age: '',\n      currentWeight: '',\n      desiredWeight: '',\n      bloodType: '1',\n    },\n\n    validationSchema: calculateFormValidationSchema,\n\n    onSubmit: (values, { resetForm, setSubmitting }) => {\n      // console.log(values);\n      const payload = {\n        height: values.height,\n        age: values.age,\n        weight: values.currentWeight,\n        desiredWeight: values.desiredWeight,\n        bloodType: Number(values.bloodType),\n      };\n      dispatch(getDailyRate(payload)).finally(() => {\n        setSubmitting(true);\n      });\n\n      resetForm();\n    },\n  });\n\n  return (\n    <SectionCss component=\"section\">\n      <TitleCss component=\"h1\">\n        Calculate your daily calorie intake right now\n      </TitleCss>\n      <FormCss onSubmit={formik.handleSubmit}>\n        <InputWrapperCss>\n          <InputGroupBoxCss>\n            <TextFieldCss\n              variant=\"standard\"\n              id=\"height\"\n              name=\"height\"\n              label=\"Height *\"\n              type=\"number\"\n              value={formik.values.height}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.height && Boolean(formik.errors.height)}\n              helperText={formik.touched.height && formik.errors.height}\n            />\n\n            <TextFieldCss\n              variant=\"standard\"\n              id=\"age\"\n              name=\"age\"\n              label=\"Age *\"\n              type=\"number\"\n              value={formik.values.age}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.age && Boolean(formik.errors.age)}\n              helperText={formik.touched.age && formik.errors.age}\n            />\n\n            <TextFieldCss\n              variant=\"standard\"\n              id=\"currentWeight\"\n              name=\"currentWeight\"\n              label=\"Current weight *\"\n              type=\"number\"\n              value={formik.values.currentWeight}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={\n                formik.touched.currentWeight &&\n                Boolean(formik.errors.currentWeight)\n              }\n              helperText={\n                formik.touched.currentWeight && formik.errors.currentWeight\n              }\n            />\n          </InputGroupBoxCss>\n\n          <InputGroupBoxCss>\n            <TextFieldCss\n              variant=\"standard\"\n              id=\"desiredWeight\"\n              name=\"desiredWeight\"\n              label=\"Desired weight *\"\n              type=\"number\"\n              value={formik.values.desiredWeight}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={\n                formik.touched.desiredWeight &&\n                Boolean(formik.errors.desiredWeight)\n              }\n              helperText={\n                formik.touched.desiredWeight && formik.errors.desiredWeight\n              }\n            />\n\n            <FormControlCss>\n              <FormLabel id=\"bloodType\">Blood type *</FormLabel>\n\n              <RadioGroup\n                row\n                aria-labelledby=\"bloodType\"\n                name=\"bloodType\"\n                value={formik.values.bloodType}\n                onChange={formik.handleChange}\n              >\n                <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n                <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n                <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n                <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n              </RadioGroup>\n            </FormControlCss>\n          </InputGroupBoxCss>\n        </InputWrapperCss>\n\n        <ButtonSubmitCss type=\"submit\" onClick={handleOpen}>\n          Start losing weight\n        </ButtonSubmitCss>\n\n        {/* <ButtonSubmit name=\"Start losing weight\" onClick={handleOpen} /> */}\n      </FormCss>\n\n      {formik.isValid && formik.isSubmitting ? (\n        <ModalCss\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <ModalBoxContentCss>\n            <KeyboardReturnIconWrapperCss>\n              <KeyboardReturnIcon />\n            </KeyboardReturnIconWrapperCss>\n\n            <TitleCss component=\"h2\">\n              Your recommended daily calorie intake is\n            </TitleCss>\n            <KcalValueTextCss>\n              {Math.round(dailyRate)} <span>kcal</span>\n            </KcalValueTextCss>\n\n            <div>Foods you should not eats</div>\n            <FixedSizeList\n              height={130}\n              width={330}\n              itemSize={32}\n              itemCount={notAllowedProducts.length}\n              overscanCount={5}\n            >\n              {renderRow}\n            </FixedSizeList>\n          </ModalBoxContentCss>\n        </ModalCss>\n      ) : (\n        <></>\n      )}\n    </SectionCss>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { CalculateForm } from '../components/CalculateForm';\n\nconst Home = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>SlimMom | Home</title>\n      </Helmet>\n\n      <CalculateForm />\n    </HelmetProvider>\n  );\n};\n\nexport default Home;\n"],"names":["SectionCss","styled","Box","theme","TitleCss","Typography","FormCss","TextFieldCss","TextField","InputWrapperCss","InputGroupBoxCss","FormControlCss","FormControl","ButtonSubmitCss","Button","palette","primary","accent","ModalCss","Modal","ModalBoxContentCss","KeyboardReturnIconWrapperCss","KcalValueTextCss","calculateFormValidationSchema","yup","shape","height","integer","min","max","required","age","currentWeight","desiredWeight","bloodType","CalculateForm","dispatch","useDispatch","React","open","setOpen","useDailyRate","dailyRate","notAllowedProducts","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","setSubmitting","payload","weight","Number","getDailyRate","finally","component","handleSubmit","variant","id","name","label","type","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","onClick","isValid","isSubmitting","onClose","KeyboardReturn","Math","round","width","itemSize","itemCount","length","overscanCount","props","index","style","ListItem","disablePadding","ListItemButton","ListItemText"],"sourceRoot":""}