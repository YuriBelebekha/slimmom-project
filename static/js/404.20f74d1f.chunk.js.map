{"version":3,"file":"static/js/404.20f74d1f.chunk.js","mappings":"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","sources":["components/ProgressLine/ProgressLine.styled.jsx","components/ProgressLine/ProgressLine.jsx","components/CalculateFormUser/CalculateFormUser.styled.jsx","components/CalculateFormUser/CalculateFormUser.jsx","pages/Calculator/Calculator.jsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport styled from '@emotion/styled';\n\nexport const BoxCss = styled(Box)`\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n`;\n","import * as React from 'react';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { orange } from '@mui/material/colors';\nimport { BoxCss } from './ProgressLine.styled';\n\nconst themeProgressLine = createTheme({\n  palette: {\n    primary: orange,\n  },\n});\n\nexport default function LinearIndeterminate() {\n  return (\n    <ThemeProvider theme={themeProgressLine}>\n      <BoxCss>\n        <LinearProgress />\n      </BoxCss>\n    </ThemeProvider>\n  );\n}\n","import styled from '@emotion/styled';\nimport { Box, Typography, TextField, FormControl, Button } from '@mui/material';\nimport { theme } from '../../constants/theme';\n\nexport const SectionCss = styled(Box)`\n  max-width: 280px;\n  margin-top: 40px;\n\n  ${theme.breakpoints.up('tablet')} {\n    max-width: 530px;\n    margin-top: 0;\n  }\n`;\n\nexport const TitleCss = styled(Typography)`\n  margin-bottom: 42px;\n  text-align: left;\n\n  font-family: VerdanaBold;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 25px;\n  color: ${theme.palette.primary.main};\n\n  ${theme.breakpoints.up('tablet')} {\n    margin-bottom: 60px;\n\n    font-size: 34px;\n    line-height: 48px;\n    text-align: left;\n  }\n`;\n\nexport const FormCss = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${theme.breakpoints.up('tablet')} {\n    align-items: start;\n  }\n\n  ${theme.breakpoints.up('desktop')} {\n    align-items: end;\n  }\n`;\n\nexport const TextFieldCss = styled(TextField)`\n  width: 280px;\n  padding: 4px 0;\n  margin-bottom: 32px;\n\n  & label {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n  }\n\n  & label.Mui-focused {\n    color: ${theme.palette.primary.accent};\n  }\n\n  & .MuiInput-underline:after {\n    border-bottom-color: ${theme.palette.primary.accent};\n  }\n\n  & .MuiInput-root {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n    background: transparent;\n  }\n\n  & .MuiFormHelperText-root {\n    position: absolute;\n    bottom: -20px;\n  }\n\n  ${theme.breakpoints.up('tablet')} {\n    width: 240px;\n  }\n`;\n\nexport const InputWrapperCss = styled(Box)`\n  display: flex;\n  flex-direction: column;\n\n  ${theme.breakpoints.up('tablet')} {\n    flex-direction: row;\n    margin-bottom: 38px;\n  }\n`;\n\nexport const InputGroupBoxCss = styled(Box)`\n  display: flex;\n  flex-direction: column;\n\n  ${theme.breakpoints.up('tablet')} {\n    &:last-child {\n      margin-left: 32px;\n    }\n  }\n\n  ${theme.breakpoints.up('desktop')} {\n    &:last-child {\n      margin-right: 18px;\n    }\n  }\n`;\n\nexport const FormControlCss = styled(FormControl)`\n  margin-bottom: 40px;\n\n  & label.Mui-focused {\n    color: ${theme.palette.primary.accent};\n  }\n\n  & > label {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n  }\n\n  & .MuiFormControlLabel-root > .Mui-checked {\n    color: ${theme.palette.primary.accent};\n\n    & ~ .MuiTypography-root {\n      color: ${theme.palette.primary.accent};\n    }\n  }\n\n  & .MuiTypography-root {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n  }\n\n  ${theme.breakpoints.up('tablet')} {\n    margin-bottom: 0;\n\n    & > label {\n      padding-top: 20px;\n      padding-bottom: 11px;\n      border-bottom: 1px solid ${theme.palette.primary.darkGrey};\n    }\n  }\n`;\n\nexport const ButtonSubmitCss = styled(Button)`\n  min-width: 180px;\n  padding: 13px 22px;\n\n  font-family: verdanaBold;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  text-transform: capitalize;\n  color: ${theme.palette.primary.white};\n\n  background-color: ${({ theme }) => theme.palette.primary.accent};\n  border-radius: 30px;\n  box-shadow: 0px 4px 10px 0px ${theme.palette.primary.accent};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.palette.primary.accent};\n    box-shadow: 0px 2px 5px 0px ${theme.palette.primary.accent};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport * as React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { getDailyRateByUserId } from 'redux/dailyRate/dailyRateOperations';\n\nimport { RadioGroup, Radio, FormControlLabel, FormLabel } from '@mui/material';\nimport {\n  SectionCss,\n  TitleCss,\n  FormCss,\n  TextFieldCss,\n  InputWrapperCss,\n  InputGroupBoxCss,\n  FormControlCss,\n  ButtonSubmitCss,\n} from './CalculateFormUser.styled';\nimport LinearIndeterminate from '../ProgressLine/ProgressLine';\nimport { useDailyRate } from 'hooks';\n\nconst calculateFormValidationSchema = yup.object().shape({\n  height: yup\n    .number('Enter your height')\n    .integer('An integer value must be entered')\n    .min(120, 'Value must not be less than 120 (cm)')\n    .max(220, 'Value should not exceed 220 (cm)')\n    .required('Height is required'),\n  age: yup\n    .number('Enter your age')\n    .integer('An integer value must be entered')\n    .min(18, 'Value must not be less than 18 (years)')\n    .max(70, 'Value should not exceed 70 (years)')\n    .required('Age is required'),\n  currentWeight: yup\n    .number('Enter your current weight')\n    .integer('An integer value must be entered')\n    .min(35, 'Value must not be less than 35 (kg)')\n    .max(180, 'Value should not exceed 180 (kg)')\n    .required('Current weight is required'),\n  desiredWeight: yup\n    .number('Enter your desired weight')\n    .integer('An integer value must be entered')\n    .min(35, 'Value must not be less than 35 (kg)')\n    .max(180, 'Value should not exceed 180 (kg)')\n    .required('Desired weight is required'),\n  bloodType: yup\n    .string('Enter your blood type')\n    .required('Blood type is required'),\n});\n\nexport const CalculateFormUser = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      height: '',\n      age: '',\n      currentWeight: '',\n      desiredWeight: '',\n      bloodType: '1',\n    },\n\n    validationSchema: calculateFormValidationSchema,\n\n    onSubmit: (values, { resetForm, setSubmitting }) => {\n      const payload = {\n        height: values.height,\n        age: values.age,\n        weight: values.currentWeight,\n        desiredWeight: values.desiredWeight,\n        bloodType: Number(values.bloodType),\n      };\n      dispatch(getDailyRateByUserId(payload)).finally(() => {\n        setSubmitting(true);\n      });\n\n      resetForm();\n    },\n  });\n\n  const {\n    dailyRate: { isLoading },\n  } = useDailyRate();\n\n  return (\n    <SectionCss component=\"section\">\n      {isLoading ? <LinearIndeterminate /> : null}\n\n      <TitleCss component=\"h2\">\n        Calculate your daily calorie intake right now\n      </TitleCss>\n\n      <FormCss onSubmit={formik.handleSubmit}>\n        <InputWrapperCss>\n          <InputGroupBoxCss>\n            <TextFieldCss\n              variant=\"standard\"\n              id=\"height\"\n              name=\"height\"\n              label=\"Height *\"\n              type=\"number\"\n              value={formik.values.height}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.height && Boolean(formik.errors.height)}\n              helperText={formik.touched.height && formik.errors.height}\n            />\n\n            <TextFieldCss\n              variant=\"standard\"\n              id=\"age\"\n              name=\"age\"\n              label=\"Age *\"\n              type=\"number\"\n              value={formik.values.age}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.age && Boolean(formik.errors.age)}\n              helperText={formik.touched.age && formik.errors.age}\n            />\n\n            <TextFieldCss\n              variant=\"standard\"\n              id=\"currentWeight\"\n              name=\"currentWeight\"\n              label=\"Current weight *\"\n              type=\"number\"\n              value={formik.values.currentWeight}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={\n                formik.touched.currentWeight &&\n                Boolean(formik.errors.currentWeight)\n              }\n              helperText={\n                formik.touched.currentWeight && formik.errors.currentWeight\n              }\n            />\n          </InputGroupBoxCss>\n\n          <InputGroupBoxCss>\n            <TextFieldCss\n              variant=\"standard\"\n              id=\"desiredWeight\"\n              name=\"desiredWeight\"\n              label=\"Desired weight *\"\n              type=\"number\"\n              value={formik.values.desiredWeight}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={\n                formik.touched.desiredWeight &&\n                Boolean(formik.errors.desiredWeight)\n              }\n              helperText={\n                formik.touched.desiredWeight && formik.errors.desiredWeight\n              }\n            />\n\n            <FormControlCss>\n              <FormLabel id=\"bloodType\">Blood type *</FormLabel>\n\n              <RadioGroup\n                row\n                aria-labelledby=\"bloodType\"\n                name=\"bloodType\"\n                value={formik.values.bloodType}\n                onChange={formik.handleChange}\n              >\n                <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n                <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n                <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n                <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n              </RadioGroup>\n            </FormControlCss>\n          </InputGroupBoxCss>\n        </InputWrapperCss>\n\n        <ButtonSubmitCss type=\"submit\">Start losing weight</ButtonSubmitCss>\n      </FormCss>\n    </SectionCss>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { CalculateFormUser } from 'components/CalculateFormUser';\nimport { DiaryUserSummary } from 'components/DiaryUserSummary';\n\nconst Calculator = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>SlimMom | Calculator</title>\n      </Helmet>\n\n      <CalculateFormUser />\n\n      <DiaryUserSummary />\n    </HelmetProvider>\n  );\n};\n\nexport default Calculator;\n"],"names":["BoxCss","styled","Box","themeProgressLine","createTheme","palette","primary","orange","LinearIndeterminate","ThemeProvider","theme","LinearProgress","SectionCss","TitleCss","Typography","FormCss","TextFieldCss","TextField","InputWrapperCss","InputGroupBoxCss","FormControlCss","FormControl","ButtonSubmitCss","Button","accent","calculateFormValidationSchema","yup","shape","height","integer","min","max","required","age","currentWeight","desiredWeight","bloodType","CalculateFormUser","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","setSubmitting","payload","weight","Number","getDailyRateByUserId","finally","isLoading","useDailyRate","dailyRate","component","handleSubmit","variant","id","name","label","type","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","DiaryUserSummary"],"sourceRoot":""}