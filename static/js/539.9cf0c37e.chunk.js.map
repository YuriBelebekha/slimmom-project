{"version":3,"file":"static/js/539.9cf0c37e.chunk.js","mappings":"oMAIaA,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAH,0ZAWA,qBAAGE,MAAkBC,QAAQC,QAAQC,MAArC,GAEWH,EAAAA,EAAAA,QAAAA,QAAAA,QAKT,qBAAGA,MAAkBC,QAAQC,QAAQC,MAArC,GACUH,EAAAA,EAAAA,QAAAA,QAAAA,Q,SCrBrBI,EAAe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC7B,OACE,SAACR,EAAD,CAAWS,KAAK,SAASC,QAAQ,YAAjC,SACGF,GAGN,C,kKCHYG,GAAQV,EAAAA,EAAAA,GAAOW,EAAAA,EAAPX,CAAH,kDAGdE,EAAAA,EAAAA,YAAAA,GAAqB,WAKZU,GAAUZ,EAAAA,EAAAA,GAAOa,EAAAA,GAAPb,CAAH,2EAGhBE,EAAAA,EAAAA,YAAAA,GAAqB,UAIrBA,EAAAA,EAAAA,YAAAA,GAAqB,YAKZY,EAAkBd,EAAAA,EAAAA,IAAH,kDAGxBE,EAAAA,EAAAA,YAAAA,GAAqB,WAKZa,GAAWf,EAAAA,EAAAA,GAAOgB,EAAAA,GAAPhB,CAAH,ypBAWHE,EAAAA,EAAAA,QAAAA,QAAAA,KAQWA,EAAAA,EAAAA,YAAAA,SAAAA,SAAyCA,EAAAA,EAAAA,YAAAA,OAAAA,QAIlDA,EAAAA,EAAAA,QAAAA,QAAAA,OAcPA,EAAAA,EAAAA,QAAAA,QAAAA,QAIAe,GAAkBjB,EAAAA,EAAAA,GAAOkB,EAAAA,GAAPlB,CAAH,qJAOjBE,EAAAA,EAAAA,QAAAA,QAAAA,cAGEiB,EAAWnB,EAAAA,EAAAA,MAAH,2JAOVE,EAAAA,EAAAA,QAAAA,QAAAA,U,mBC9ELkB,EAA4BC,EAAAA,KAAaC,MAAM,CACnDC,MACEF,EAAAA,KAEGE,MAAM,yBACNC,SAAS,mCACdC,SACEJ,EAAAA,KAEGK,IAAI,EAAG,sCACPC,IAAI,GAAI,2CACRH,SAAS,qCAGVI,EAAgB,CACpBL,MAAO,GACPE,SAAU,IAGCI,EAAY,WAMvB,OACE,UAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,WACE,SAACrB,EAAD,CAAOqB,UAAU,KAAjB,SAAsB,YAItB,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBZ,EAClBa,SAde,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BC,QAAQC,IAAIH,GACZC,GACD,EAQG,UAKE,UAACvB,EAAD,CAAS0B,aAAa,MAAtB,WACE,UAACxB,EAAD,YACE,UAACK,EAAD,CAAUoB,QAAQ,QAAlB,WACI,SAACxB,EAAD,CACEP,KAAK,QACLD,KAAK,QACLiB,UAAQ,KAEV,0BAAM,aACN,SAACP,EAAD,CAAiBc,UAAU,MAAMxB,KAAK,cAG1C,UAACY,EAAD,CAAUoB,QAAQ,WAAlB,WACE,SAACxB,EAAD,CACEP,KAAK,OACLD,KAAK,WACLiB,UAAQ,KAEV,0BAAM,gBACN,SAACP,EAAD,CAAiBc,UAAU,MAAMxB,KAAK,oBAI1C,SAACD,EAAA,EAAD,CAAcC,KAAK,kBAK5B,EC9DD,EAZc,WACZ,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,2BAAO,uBAGT,SAACsB,EAAD,MAGL,C","sources":["components/ButtonSubmit/ButtonSubmit.styled.jsx","components/ButtonSubmit/ButtonSubmit.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import { Button } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { theme } from '../../constants/theme';\n\nexport const ButtonCss = styled(Button)`\n  min-width: 180px;\n  padding: 13px 22px;\n\n  font-family: verdanaBold;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  text-transform: capitalize;\n\n  background-color: ${({ theme }) => theme.palette.primary.accent};\n  border-radius: 30px;\n  box-shadow: 0px 4px 10px 0px ${theme.palette.primary.accent};\n\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.palette.primary.accent};\n    box-shadow: 0px 2px 5px 0px ${theme.palette.primary.accent};\n  };\n`;","import { ButtonCss } from './ButtonSubmit.styled';\n\nexport const ButtonSubmit = ({ name }) => {  \n  return (\n    <ButtonCss type=\"submit\" variant=\"contained\" >\n      {name}\n    </ButtonCss>\n  )\n};","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { Typography } from '@mui/material';\nimport { theme } from '../../constants/theme';\n\nexport const Title = styled(Typography)`\n  \n\n  ${theme.breakpoints.up('tablet')} {\n    \n  };\n`;\n\nexport const FormCss = styled(Form)`  \n  \n\n  ${theme.breakpoints.up('tablet')} {\n    \n  };\n\n  ${theme.breakpoints.up('desktop')} {\n    \n  };\n`;\n\nexport const InputWrapperCss = styled.div`\n  \n\n  ${theme.breakpoints.up('tablet')} {\n    \n  };\n`;\n\nexport const FieldCss = styled(Field)`\n  width: 240px;\n  padding: 4px 0;\n  margin-bottom: 32px;\n\n  background-color: transparent;\n  \n  border-top: none;\n  border-left: none;\n  border-bottom: 1px solid;\n  border-right: none;\n  border-color: ${theme.palette.primary.grey};\n  outline: none;  \n\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n\n  transition: border-color ${theme.transitions.duration.standard}ms ${theme.transitions.easing.easeOut};\n\n  &:hover,\n  &:focus {\n    border-color: ${theme.palette.primary.accent};\n  };\n  \n  & ~ span {\n    position: absolute;\n    top: 0;\n    left: 0;\n  };\n\n  &:focus ~ span,\n  &:not(:focus):valid ~ span {\n    top: -16px;\n    font-size: 10px;\n    line-height: 14px;\n    color: ${theme.palette.primary.accent};\n  };\n`;\n\nexport const ErrorMessageCss = styled(ErrorMessage)`\n  position: absolute;\n  top: 30px;\n  left: 0;\n  max-width: 240px;\n  font-size: 7px;\n  line-height: 10px;\n  color: ${theme.palette.primary.errorMessage};\n`;\n\nexport const LabelCss = styled.label`\n  position: relative;\n\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: ${theme.palette.primary.darkGrey};  \n`;","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Box } from '@mui/material';\nimport {\n  FormCss,\n  FieldCss,\n  ErrorMessageCss,\n  Title,\n  InputWrapperCss,\n  LabelCss,\n} from './LoginForm.styled';\nimport { ButtonSubmit } from '../ButtonSubmit/ButtonSubmit';\n\nconst loginFormValidationSchema = yup.object().shape({\n  email:\n    yup\n      .string()\n      .email('Must be a valid email')\n      .required('Entering this value is required'),\n  password:\n    yup\n      .string()\n      .min(8, 'Must be at least 8 characters long')\n      .max(30, 'Must contain no more than 30 characters')\n      .required('Entering this value is required'),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    resetForm();\n  };\n\n  return (\n    <Box component=\"section\">\n      <Title component=\"h1\">\n        Log In\n      </Title>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={loginFormValidationSchema}\n        onSubmit={handleSubmit}\n      >\n        <FormCss autoComplete='off'>\n          <InputWrapperCss>\n            <LabelCss htmlFor=\"email\">\n                <FieldCss\n                  type=\"email\"\n                  name=\"email\"\n                  required\n                />\n                <span>Email *</span>\n                <ErrorMessageCss component=\"div\" name=\"email\" />\n            </LabelCss>\n            \n            <LabelCss htmlFor=\"password\">\n              <FieldCss\n                type=\"text\"\n                name=\"password\"\n                required\n              />\n              <span>Password *</span>\n              <ErrorMessageCss component=\"div\" name=\"password\" />\n            </LabelCss>\n          </InputWrapperCss>\n\n          <ButtonSubmit name=\"Log In\" />\n        </FormCss>\n      </Formik>\n    </Box>\n  )\n};","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { LoginForm } from '../../components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>SlimMom | Login</title>\n      </Helmet>\n\n      <LoginForm />\n    </HelmetProvider>\n  )\n};\n\nexport default Login;"],"names":["ButtonCss","styled","Button","theme","palette","primary","accent","ButtonSubmit","name","type","variant","Title","Typography","FormCss","Form","InputWrapperCss","FieldCss","Field","ErrorMessageCss","ErrorMessage","LabelCss","loginFormValidationSchema","yup","shape","email","required","password","min","max","initialValues","LoginForm","Box","component","validationSchema","onSubmit","values","resetForm","console","log","autoComplete","htmlFor"],"sourceRoot":""}