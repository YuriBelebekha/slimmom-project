{"version":3,"file":"static/js/446.dafb87d5.chunk.js","mappings":"mMAIaA,GAAkBC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAH,uZAWN,qBAAGE,MAAkBC,QAAQC,QAAQC,MAArC,GAEWH,EAAAA,EAAAA,QAAAA,QAAAA,QAIT,qBAAGA,MAAkBC,QAAQC,QAAQC,MAArC,GACUH,EAAAA,EAAAA,QAAAA,QAAAA,Q,SCpBrBI,EAAe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC7B,OACE,SAACR,EAAD,CAAiBS,KAAK,SAASC,QAAQ,YAAvC,SACGF,GAGN,C,sVCLYG,GAAiBV,EAAAA,EAAAA,GAAOW,EAAAA,EAAPX,CAAH,4N,wCCCdY,EAAUZ,EAAAA,EAAAA,KAAH,+JAKhBE,EAAAA,EAAAA,YAAAA,GAAqB,WAMZW,GAAeb,EAAAA,EAAAA,GAAOc,EAAAA,EAAPd,CAAH,k0BAeZE,EAAAA,EAAAA,QAAAA,QAAAA,OAIcA,EAAAA,EAAAA,QAAAA,QAAAA,OAkBvBA,EAAAA,EAAAA,YAAAA,GAAqB,W,SCjCnBa,EAAoCC,EAAAA,KAAaC,MAAM,CAM3DC,OAAQF,EAAAA,GACE,uBACPG,IAAI,EAAG,kBACPC,IAAI,IAAM,sBACVC,WACAC,SAAS,wBAOP,I,cCVHC,EDUSC,EAAyB,WACpC,IALmBC,EAKbC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,KAEbC,GARaL,EAQqBM,GAPjCC,OAAOC,IAAMR,GAAMS,OAAO,gBAUnBC,EACVC,EAAAA,EAAAA,WADFC,SAAYF,kBAKd,GAAsCG,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8CF,EAAAA,EAAAA,UAAS,IAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,IAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAoB,SAACC,EAAOC,GAChCP,EAAeM,EAAME,OAAOC,MAC7B,EAEKC,GAAmBC,EAAAA,EAAAA,UAAQ,WAC/B,OAAOC,IAASP,EAAmB,IACpC,GAAE,KAEHQ,EAAAA,EAAAA,YAAU,WAGR,OAFA3B,GAAS4B,EAAAA,EAAAA,GAAoBf,IAEtB,WACLW,EAAiBK,QAClB,CACF,IAkBD,IAAMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbjC,KAAM,GACNkB,UAAW,GACXzB,OAAQ,IAGVyC,iBAAkB5C,EAElB6C,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cACxBC,EAAU,CACdvC,KAAMK,EACNa,UAAWA,EACXzB,OAAQ+C,OAAOJ,EAAO3C,SAGxBQ,GAASwC,EAAAA,EAAAA,IAAQF,IAAUG,SAAQ,WACjCJ,GAAc,EACf,IAEDD,GACD,IAGH,OACE,UAACM,EAAA,EAAD,YACE,SAAC1D,EAAD,CAAgB2D,UAAU,KAA1B,SAA+B,yBAE/B,UAACzD,EAAD,CAASgD,SAAUJ,EAAOc,aAA1B,WACE,SAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,SACHC,kBAAgB,EAChBzB,MAAOR,EACPkC,cAAezB,EACf0B,SAnDa,SAACC,EAAQ5B,EAAO6B,GAE/BpC,EADO,iBAAXoC,EACuB7B,EACA,IAEvBd,EAAkB4C,KAAI,SAAAC,GACpB,OAAOA,EAAOC,MAAMC,GAAGC,gBAAkBlC,EAAMkC,cAC3CvC,EAAaoC,EAAOI,KACpB,IACL,GACF,EA0COC,QAASlD,EAAkB4C,KAAI,SAAAC,GAAM,OAxCdM,EAyCCN,EAAOC,MAAMC,IAxC7B,GAAGK,cAAgBD,EAAOE,MAAM,GADhD,IAA+BF,CAwCc,IAGrCG,aAAc,SAACC,EAAOV,GACpB,OACE,2CAAQU,GAAR,IAAeC,IAAKD,EAAMjB,KACvBO,EAGN,EACDY,YAAa,SAAAC,GAAM,OACjB,SAAChF,GAAD,kBACMgF,GADN,IAEEpF,QAAQ,WACRqF,MAAM,qBACNC,YAAU,kBACLF,EAAOE,YADF,IAERvF,KAAM,aAPO,KAarB,SAACK,EAAD,CACEJ,QAAQ,WACRgE,GAAG,SACHlE,KAAK,SACLuF,MAAM,cACN7C,MAAOO,EAAOK,OAAO3C,OACrB0D,SAAUpB,EAAOwC,aACjBC,OAAQzC,EAAO0C,WACfC,MAAO3C,EAAO4C,QAAQlF,QAAUmF,QAAQ7C,EAAO8C,OAAOpF,QACtDqF,WAAY/C,EAAO4C,QAAQlF,QAAUsC,EAAO8C,OAAOpF,SAGpDU,EAAW4E,MAAQtG,EAAAA,EAAAA,YAAAA,OAAAA,QAClB,SAACI,EAAA,EAAD,CAAcC,KAAK,SAEnB,SAACD,EAAA,EAAD,CAAcC,KAAK,WAK5B,E,oBE7JYkG,GAAqBzG,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAH,yOAKpBE,EAAAA,EAAAA,QAAAA,QAAAA,MAGWA,EAAAA,EAAAA,QAAAA,QAAAA,OACWA,EAAAA,EAAAA,QAAAA,QAAAA,OAGTA,EAAAA,EAAAA,QAAAA,QAAAA,QAIXwG,GAA2B1G,EAAAA,EAAAA,GAAOoE,EAAAA,EAAPpE,CAAH,2JAMfE,EAAAA,EAAAA,QAAAA,QAAAA,OAITyG,IAAW3G,EAAAA,EAAAA,GAAO4G,EAAAA,EAAP5G,CAAH,yFAMR6G,IAA+B7G,EAAAA,EAAAA,GAAOoE,EAAAA,EAAPpE,CAAH,sFC5B5B8G,GAA2B,WACtC,MAAwBC,EAAAA,UAAe,GAAvC,eAAOC,EAAP,KAAaC,EAAb,KAIA,OACE,4BACE,SAACN,GAAD,CACEK,KAAMA,EACNE,QANc,kBAAMD,GAAQ,EAAd,EAOd,kBAAgB,oBAChB,mBAAiB,0BAJnB,UAME,UAACP,EAAD,YACE,SAACG,GAAD,WACE,SAACM,EAAA,EAAD,OAGF,SAAC3F,EAAD,UAIJ,SAACiF,EAAD,CAAoBW,QApBL,kBAAMH,GAAQ,EAAd,EAoBf,SAAyC,QAG9C,ECjCYI,IAASrH,EAAAA,EAAAA,GAAOoE,EAAAA,EAAPpE,CAAH,mGCANsH,GAAqB,WAChC,OACE,SAACD,GAAD,WACE,SAAC7F,EAAD,KAGL,ECNY+F,GAAyB,WACpC,IACS9F,EACLW,EAAAA,EAAAA,WADFb,IAAOE,KAQT,OACE,+BACE,yBAAMA,KAGX,ECdY+F,IAAmBxH,EAAAA,EAAAA,GAAOoE,EAAAA,EAAPpE,CAAH,0YAMzBE,EAAAA,EAAAA,YAAAA,GAAqB,UAKbA,EAAAA,EAAAA,QAAAA,QAAAA,SASNA,EAAAA,EAAAA,YAAAA,GAAqB,WAOduH,IAA0BzH,EAAAA,EAAAA,GAAOoE,EAAAA,EAAPpE,CAAH,8MAMhCE,EAAAA,EAAAA,YAAAA,GAAqB,WNhBd6B,GADS,IAAI2F,KAGxB,SAASC,GAAYlG,GACnB,OAAOO,OAAOC,IAAMR,GAAMS,OAAO,cAClC,CAIM,IAAM0F,GAAoB,WAC/B,IAAMhG,GAAaC,EAAAA,EAAAA,KACbH,GAAWC,EAAAA,EAAAA,MAGjBJ,EAAG,mCAAG,8FACSG,GACXmG,EAAAA,EAAAA,IAAc,CAAEpG,KAAMkG,GAAY5F,OAClC+F,MAAK,SAAAC,GACL,OAAOA,EAAI/D,OACZ,IALG,mFAAH,qDAQHgE,QAAQC,IAAI1G,KAgBZ,OACE,iCACE,SAACiG,GAAD,WACE,UAACU,EAAA,EAAD,CAAsBC,YAAaC,EAAAA,EAAnC,WACE,SAACC,EAAA,EAAD,CACEnG,OAAO,aACPoG,SApBW,SAAArF,GACnBlB,GAAekB,EAEf1B,EAAG,mCAAG,8FACSG,GACXmG,EAAAA,EAAAA,IAAc,CAAEpG,KAAMkG,GAAY5F,OAClC+F,MAAK,SAAAC,GACL,OAAOA,EAAI/D,OACZ,IALG,mFAAH,qDAQHgE,QAAQC,IAAI1G,IACb,EASS0B,MAAOhB,IAAMF,OAEf,SAACwG,EAAA,EAAD,UAIJ,SAACd,GAAD,UACG7F,EAAW4E,MAAQtG,EAAAA,EAAAA,YAAAA,OAAAA,QAClB,SAAC4G,GAAD,KAEA,SAACQ,GAAD,OAIJ,SAACC,GAAD,MAGL,C,qGOnED,EAZc,WACZ,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,2BAAO,uBAGT,SAACK,EAAA,EAAD,MAGL,C","sources":["components/ButtonSubmit/ButtonSubmit.styled.jsx","components/ButtonSubmit/ButtonSubmit.jsx","components/VisuallyHidden/VisuallyHidden.styled.jsx","components/DiarySearchProductForm/DiarySearchProductForm.styled.jsx","components/DiarySearchProductForm/DiarySearchProductForm.jsx","components/DiaryUserCalendar/DiaryUserCalendar.jsx","components/DiarySearchProductMobile/DiarySearchProductMobile.styled.jsx","components/DiarySearchProductMobile/DiarySearchProductMobile.jsx","components/DiarySearchProduct/DiarySearchProduct.styled.jsx","components/DiarySearchProduct/DiarySearchProduct.jsx","components/DairyEatenProductsList/DairyEatenProductsList.jsx","components/DiaryUserCalendar/DiaryUserCalendar.styled.jsx","pages/Diary/Diary.jsx"],"sourcesContent":["import { Button } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { theme } from '../../constants/theme';\n\nexport const ButtonSubmitCss = styled(Button)`\n  min-width: 180px;\n  padding: 13px 22px;\n\n  font-family: verdanaBold;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  text-transform: capitalize;\n\n  background-color: ${({ theme }) => theme.palette.primary.accent};\n  border-radius: 30px;\n  box-shadow: 0px 4px 10px 0px ${theme.palette.primary.accent};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.palette.primary.accent};\n    box-shadow: 0px 2px 5px 0px ${theme.palette.primary.accent};\n  }\n`;\n","import { ButtonSubmitCss } from './ButtonSubmit.styled';\n\nexport const ButtonSubmit = ({ name }) => {  \n  return (\n    <ButtonSubmitCss type=\"submit\" variant=\"contained\" >\n      {name}\n    </ButtonSubmitCss>\n  )\n};","import styled from '@emotion/styled';\nimport { Typography } from '@mui/material';\n\nexport const VisuallyHidden = styled(Typography)`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\nimport { theme } from '../../constants/theme';\n\nexport const FormCss = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${theme.breakpoints.up('tablet')} {\n    flex-direction: row;\n    align-items: start;\n  }\n`;\n\nexport const TextFieldCss = styled(TextField)`\n  width: 280px;\n  height: 70px;\n  padding: 4px 0;\n  margin-bottom: 32px;\n\n  & label {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n  }\n\n  & label.Mui-focused {\n    color: ${theme.palette.primary.accent};\n  }\n\n  & .MuiInput-underline:after {\n    border-bottom-color: ${theme.palette.primary.accent};\n  }\n\n  & .MuiInput-root {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n    background: transparent;\n    height: 30px;\n  }\n\n  & .MuiFormHelperText-root {\n    position: absolute;\n    bottom: -20px;\n  }\n\n  ${theme.breakpoints.up('tablet')} {\n    width: 240px;\n\n    &:first-of-type {\n      margin-right: 20px;\n    }\n\n    &:nth-of-type(2) {\n      width: 106px;\n      margin-right: 85px;\n    }\n  }\n`;\n","import { useState, useMemo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport debounce from 'lodash.debounce';\nimport { getProductsFromList } from 'redux/productSearch/productSearchOperations';\nimport { dayData } from 'redux/day/dayOperations';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport dayjs from 'dayjs';\n\nimport { useScreenSize } from '../../hooks/useScreenSize';\nimport { store } from '../../redux/store';\nimport { theme } from '../../constants/theme';\nimport { VisuallyHidden } from '../VisuallyHidden';\nimport { ButtonSubmit } from '../ButtonSubmit/ButtonSubmit';\nimport { selectedDate } from '../DiaryUserCalendar/DiaryUserCalendar';\n\nimport { Autocomplete, Box } from '@mui/material';\nimport { FormCss, TextFieldCss } from './DiarySearchProductForm.styled';\n\nconst searchProductFormValidationSchema = yup.object().shape({\n  // search: yup\n  //   .string('Enter product name')\n  //   .min(2, 'Minimum 2 characters length')\n  //   .max(50, 'Maximum 50 characters length')\n  //   .required('Product name is required'),\n  weight: yup\n    .number('Enter your password')\n    .min(1, 'Minimum 1 gram')\n    .max(3000, 'Maximum 3000 grams')\n    .positive()\n    .required('Weight is required'),\n});\n\nfunction convertDate(date) {\n  return String(dayjs(date).format('YYYY-MM-DD'));\n}\n\nexport const DiarySearchProductForm = () => {\n  const dispatch = useDispatch();\n  const screenSize = useScreenSize();\n\n  const convertSelectedDate = convertDate(selectedDate);\n\n  const {\n    products: { foundProductsList },\n  } = store.getState();\n  // const allData = store.getState();\n  // console.log(allData);\n\n  const [productName, setProductName] = useState('');\n  const [selectedProduct, setSelectedProduct] = useState('');\n  const [productId, setProductId] = useState('');\n\n  const handleInputChange = (event, _value) => {\n    setProductName(event.target.value);\n  };\n\n  const debouncedResults = useMemo(() => {\n    return debounce(handleInputChange, 500);\n  }, []);\n\n  useEffect(() => {\n    dispatch(getProductsFromList(productName));\n\n    return () => {\n      debouncedResults.cancel();\n    };\n  });\n\n  const handleChange = (_event, value, reason) => {\n    reason === 'selectOption'\n      ? setSelectedProduct(value)\n      : setSelectedProduct('');\n\n    foundProductsList.map(option => {\n      return option.title.en.toLowerCase() === value.toLowerCase()\n        ? setProductId(option._id)\n        : null;\n    });\n  };\n\n  function capitalizeFirstLetter(string) {\n    return string[0].toUpperCase() + string.slice(1);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      date: '',\n      productId: '',\n      weight: '',\n    },\n\n    validationSchema: searchProductFormValidationSchema,\n\n    onSubmit: (values, { resetForm, setSubmitting }) => {\n      const payload = {\n        date: convertSelectedDate,\n        productId: productId,\n        weight: Number(values.weight),\n      };\n      // console.log(payload);\n      dispatch(dayData(payload)).finally(() => {\n        setSubmitting(false);\n      });\n\n      resetForm();\n    },\n  });\n\n  return (\n    <Box>\n      <VisuallyHidden component=\"h2\">Search Product Form</VisuallyHidden>\n\n      <FormCss onSubmit={formik.handleSubmit}>\n        <Autocomplete\n          freeSolo\n          id=\"search\"\n          disableClearable\n          value={selectedProduct}\n          onInputChange={debouncedResults}\n          onChange={handleChange}\n          options={foundProductsList.map(option =>\n            capitalizeFirstLetter(option.title.en)\n          )}\n          renderOption={(props, option) => {\n            return (\n              <li {...props} key={props.id}>\n                {option}\n              </li>\n            );\n          }}\n          renderInput={params => (\n            <TextFieldCss\n              {...params}\n              variant=\"standard\"\n              label=\"Enter product name\"\n              InputProps={{\n                ...params.InputProps,\n                type: 'search',\n              }}\n            />\n          )}\n        />\n\n        <TextFieldCss\n          variant=\"standard\"\n          id=\"weight\"\n          name=\"weight\"\n          label=\"Enter grams\"\n          value={formik.values.weight}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.weight && Boolean(formik.errors.weight)}\n          helperText={formik.touched.weight && formik.errors.weight}\n        />\n\n        {screenSize.width < theme.breakpoints.values.tablet ? (\n          <ButtonSubmit name=\"Add\" />\n        ) : (\n          <ButtonSubmit name=\"+\" />\n        )}\n      </FormCss>\n    </Box>\n  );\n};\n","import dayjs from 'dayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\nimport DateRangeIcon from '@mui/icons-material/DateRange';\nimport { useDispatch } from 'react-redux';\n\nimport { DiarySearchProductMobile } from '../DiarySearchProductMobile';\nimport { DiarySearchProduct } from '../DiarySearchProduct/DiarySearchProduct';\nimport { DiaryEatenProductsList } from '../DairyEatenProductsList/DairyEatenProductsList';\nimport { useScreenSize } from '../../hooks/useScreenSize';\n// import { getUserInfo } from '../../redux/userInfo/userInfoOperations';\nimport { getInfoForDay } from 'redux/day/dayOperations';\nimport { theme } from '../../constants/theme';\n\nimport {\n  DatePickerBoxCss,\n  DiaryListProductsBoxCss,\n} from './DiaryUserCalendar.styled';\n\nconst currentDate = new Date();\nexport let selectedDate = currentDate;\n\nfunction convertDate(date) {\n  return String(dayjs(date).format('YYYY-MM-DD'));\n}\n\nlet day;\n\nexport const DiaryUserCalendar = () => {\n  const screenSize = useScreenSize();\n  const dispatch = useDispatch();\n  // dispatch(getUserInfo()).finally(() => {});\n\n  day = async () => {\n    return await dispatch(\n      getInfoForDay({ date: convertDate(selectedDate) })\n    ).then(arg => {\n      return arg.payload;\n    });\n  };\n\n  console.log(day());\n\n  const onAcceptDate = value => {\n    selectedDate = value;\n\n    day = async () => {\n      return await dispatch(\n        getInfoForDay({ date: convertDate(selectedDate) })\n      ).then(arg => {\n        return arg.payload;\n      });\n    };\n\n    console.log(day());\n  };\n\n  return (\n    <>\n      <DatePickerBoxCss>\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <MobileDatePicker\n            format=\"DD.MM.YYYY\"\n            onAccept={onAcceptDate}\n            value={dayjs(selectedDate)}\n          />\n          <DateRangeIcon />\n        </LocalizationProvider>\n      </DatePickerBoxCss>\n\n      <DiaryListProductsBoxCss>\n        {screenSize.width < theme.breakpoints.values.tablet ? (\n          <DiarySearchProductMobile />\n        ) : (\n          <DiarySearchProduct />\n        )}\n      </DiaryListProductsBoxCss>\n\n      <DiaryEatenProductsList />\n    </>\n  );\n};\n","import { Button } from '@mui/material';\nimport { Box } from '@mui/material';\nimport { Modal } from '@mui/material';\n\nimport styled from '@emotion/styled';\nimport { theme } from '../../constants/theme';\n\nexport const ButtonContainedCss = styled(Button)`\n  min-width: 48px;\n  height: 48px;\n\n  font-size: 24px;\n  color: ${theme.palette.primary.white};\n\n  border-radius: 50%;\n  background-color: ${theme.palette.primary.accent};\n  box-shadow: 0px 4px 10px 0px ${theme.palette.primary.accent};\n\n  &:hover {\n    background-color: ${theme.palette.primary.accent};\n  }\n`;\n\nexport const AddProductFormWrapperCss = styled(Box)`\n  height: 100vh;\n  margin-top: 122px;\n  padding: 80px 20px;\n  text-align: center;\n\n  background-color: ${theme.palette.primary.white};\n  outline: none;\n`;\n\nexport const ModalCss = styled(Modal)`\n  .MuiModal-backdrop {\n    background-color: transparent;\n  }\n`;\n\nexport const KeyboardReturnIconWrapperCss = styled(Box)`\n  position: absolute;\n  top: 90px;\n  pointer-events: none;\n`;\n","import * as React from 'react';\nimport KeyboardReturnIcon from '@mui/icons-material/KeyboardReturn';\nimport { DiarySearchProductForm } from '../DiarySearchProductForm';\n\nimport {\n  ButtonContainedCss,\n  AddProductFormWrapperCss,\n  ModalCss,\n  KeyboardReturnIconWrapperCss,\n} from './DiarySearchProductMobile.styled';\n\nexport const DiarySearchProductMobile = () => {\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <ModalCss\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <AddProductFormWrapperCss>\n          <KeyboardReturnIconWrapperCss>\n            <KeyboardReturnIcon />\n          </KeyboardReturnIconWrapperCss>\n\n          <DiarySearchProductForm />\n        </AddProductFormWrapperCss>\n      </ModalCss>\n\n      <ButtonContainedCss onClick={handleOpen}>+</ButtonContainedCss>\n    </div>\n  );\n};\n","import { Box } from '@mui/material';\nimport styled from '@emotion/styled';\n\nexport const BoxCss = styled(Box)`\n  & button {\n    min-width: 0;\n    width: 48px;\n    height: 48px;\n  }\n`;\n","import { DiarySearchProductForm } from '../DiarySearchProductForm';\nimport { BoxCss } from './DiarySearchProduct.styled';\n\nexport const DiarySearchProduct = () => {\n  return (\n    <BoxCss>\n      <DiarySearchProductForm />\n    </BoxCss>\n  );\n};\n","// import { useEffect } from 'react';\nimport { store } from '../../redux/store';\n\nexport const DiaryEatenProductsList = () => {\n  const {\n    day: { date },\n  } = store.getState();\n  // console.log(store.getState());\n\n  // useEffect(() => {\n  //   return () => {};\n  // });\n\n  return (\n    <>\n      <div>{date}</div>\n    </>\n  );\n};\n","import { Box } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { theme } from '../../constants/theme';\n\nexport const DatePickerBoxCss = styled(Box)`\n  display: flex;\n  align-items: center;\n  margin-top: 48px;\n  width: 155px;\n\n  ${theme.breakpoints.up('tablet')} {\n    width: 260px;\n  }\n\n  & > .MuiSvgIcon-root {\n    fill: ${theme.palette.primary.darkGrey};\n  }\n\n  & > .MuiFormControl-root input {\n    padding: 0;\n    font-family: VerdanaBold;\n    font-size: 18px;\n    line-height: 22px;\n\n    ${theme.breakpoints.up('tablet')} {\n      font-size: 34px;\n      line-height: 41px;\n    }\n  }\n`;\n\nexport const DiaryListProductsBoxCss = styled(Box)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 60px 20px;\n\n  ${theme.breakpoints.up('tablet')} {\n    padding-right: 0;\n    padding-left: 0;\n    justify-content: start;\n  }\n`;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { DiaryUserCalendar } from 'components/DiaryUserCalendar';\n\nconst Diary = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>SlimMom | Diary</title>\n      </Helmet>\n\n      <DiaryUserCalendar />\n    </HelmetProvider>\n  );\n};\n\nexport default Diary;\n"],"names":["ButtonSubmitCss","styled","Button","theme","palette","primary","accent","ButtonSubmit","name","type","variant","VisuallyHidden","Typography","FormCss","TextFieldCss","TextField","searchProductFormValidationSchema","yup","shape","weight","min","max","positive","required","day","DiarySearchProductForm","date","dispatch","useDispatch","screenSize","useScreenSize","convertSelectedDate","selectedDate","String","dayjs","format","foundProductsList","store","products","useState","productName","setProductName","selectedProduct","setSelectedProduct","productId","setProductId","handleInputChange","event","_value","target","value","debouncedResults","useMemo","debounce","useEffect","getProductsFromList","cancel","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","setSubmitting","payload","Number","dayData","finally","Box","component","handleSubmit","Autocomplete","freeSolo","id","disableClearable","onInputChange","onChange","_event","reason","map","option","title","en","toLowerCase","_id","options","string","toUpperCase","slice","renderOption","props","key","renderInput","params","label","InputProps","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","width","ButtonContainedCss","AddProductFormWrapperCss","ModalCss","Modal","KeyboardReturnIconWrapperCss","DiarySearchProductMobile","React","open","setOpen","onClose","KeyboardReturn","onClick","BoxCss","DiarySearchProduct","DiaryEatenProductsList","DatePickerBoxCss","DiaryListProductsBoxCss","Date","convertDate","DiaryUserCalendar","getInfoForDay","then","arg","console","log","LocalizationProvider","dateAdapter","AdapterDayjs","MobileDatePicker","onAccept","DateRange"],"sourceRoot":""}