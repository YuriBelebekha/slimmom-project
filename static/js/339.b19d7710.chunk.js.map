{"version":3,"file":"static/js/339.b19d7710.chunk.js","mappings":"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","sources":["components/ProgressLine/ProgressLine.styled.jsx","components/ProgressLine/ProgressLine.jsx","hooks/useScreenSize.jsx","components/CalculateForm/CalculateForm.styled.jsx","components/DailyCalorieIntake/DailyCalorieIntake.styled.jsx","components/DailyCalorieIntake/DailyCalorieIntake.jsx","components/NotAllowedProductsList/NotAllowedProductsList.styled.jsx","components/NotAllowedProductsList/NotAllowedProductsList.jsx","components/CalculateForm/CalculateForm.jsx","pages/Home.jsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport styled from '@emotion/styled';\n\nexport const BoxCss = styled(Box)`\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n`;\n","import * as React from 'react';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { orange } from '@mui/material/colors';\nimport { BoxCss } from './ProgressLine.styled';\n\nconst themeProgressLine = createTheme({\n  palette: {\n    primary: orange,\n  },\n});\n\nexport default function LinearIndeterminate() {\n  return (\n    <ThemeProvider theme={themeProgressLine}>\n      <BoxCss>\n        <LinearProgress />\n      </BoxCss>\n    </ThemeProvider>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport const useScreenSize = () => {\n  const [screenSize, setScreenSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setScreenSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return screenSize;\n};\n","import styled from '@emotion/styled';\nimport {\n  Box,\n  Typography,\n  TextField,\n  FormControl,\n  Button,\n  Modal,\n} from '@mui/material';\nimport { theme } from '../../constants/theme';\n\nexport const SectionCss = styled(Box)`\n  max-width: 280px;\n\n  ${theme.breakpoints.up('tablet')} {\n    max-width: 530px;\n  }\n`;\n\nexport const TitleCss = styled(Typography)`\n  margin-bottom: 42px;\n  text-align: left;\n\n  font-family: VerdanaBold;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 25px;\n  color: ${theme.palette.primary.main};\n\n  ${theme.breakpoints.up('tablet')} {\n    margin-bottom: 60px;\n\n    font-size: 34px;\n    line-height: 48px;\n    text-align: left;\n  }\n`;\n\nexport const FormCss = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${theme.breakpoints.up('tablet')} {\n    align-items: start;\n  }\n\n  ${theme.breakpoints.up('desktop')} {\n    align-items: end;\n  }\n`;\n\nexport const TextFieldCss = styled(TextField)`\n  width: 280px;\n  padding: 4px 0;\n  margin-bottom: 32px;\n\n  & label {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n  }\n\n  & label.Mui-focused {\n    color: ${theme.palette.primary.accent};\n  }\n\n  & .MuiInput-underline:after {\n    border-bottom-color: ${theme.palette.primary.accent};\n  }\n\n  & .MuiInput-root {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n    background: transparent;\n  }\n\n  & .MuiFormHelperText-root {\n    position: absolute;\n    bottom: -20px;\n  }\n\n  ${theme.breakpoints.up('tablet')} {\n    width: 240px;\n  }\n`;\n\nexport const InputWrapperCss = styled(Box)`\n  display: flex;\n  flex-direction: column;\n\n  ${theme.breakpoints.up('tablet')} {\n    flex-direction: row;\n    margin-bottom: 38px;\n  }\n`;\n\nexport const InputGroupBoxCss = styled(Box)`\n  display: flex;\n  flex-direction: column;\n\n  ${theme.breakpoints.up('tablet')} {\n    &:last-child {\n      margin-left: 32px;\n    }\n  }\n\n  ${theme.breakpoints.up('desktop')} {\n    &:last-child {\n      margin-right: 18px;\n    }\n  }\n`;\n\nexport const FormControlCss = styled(FormControl)`\n  margin-bottom: 40px;\n\n  & label.Mui-focused {\n    color: ${theme.palette.primary.accent};\n  }\n\n  & > label {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n  }\n\n  & .MuiFormControlLabel-root > .Mui-checked {\n    color: ${theme.palette.primary.accent};\n\n    & ~ .MuiTypography-root {\n      color: ${theme.palette.primary.accent};\n    }\n  }\n\n  & .MuiTypography-root {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n  }\n\n  ${theme.breakpoints.up('tablet')} {\n    margin-bottom: 0;\n\n    & > label {\n      padding-top: 20px;\n      padding-bottom: 11px;\n      border-bottom: 1px solid ${theme.palette.primary.darkGrey};\n    }\n  }\n`;\n\nexport const ButtonSubmitCss = styled(Button)`\n  min-width: 180px;\n  padding: 13px 22px;\n\n  font-family: verdanaBold;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  text-transform: capitalize;\n  color: ${theme.palette.primary.white};\n\n  background-color: ${({ theme }) => theme.palette.primary.accent};\n  border-radius: 30px;\n  box-shadow: 0px 4px 10px 0px ${theme.palette.primary.accent};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.palette.primary.accent};\n    box-shadow: 0px 2px 5px 0px ${theme.palette.primary.accent};\n  }\n`;\n\nexport const ModalCss = styled(Modal)`\n  .MuiModal-backdrop {\n    background-color: transparent;\n  }\n\n  ${theme.breakpoints.up('tablet')} {\n    .MuiModal-backdrop {\n      background-color: ${theme.palette.primary.modalBackdrop};\n    }\n  }\n`;\n\nexport const ModalBoxContentCss = styled(Box)`\n  height: 100vh;\n  margin-top: 120px;\n  padding: 40px 20px 120px;\n  background-color: ${theme.palette.primary.white};\n\n  ${theme.breakpoints.up('tablet')} {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 330px;\n    height: 430px;\n    margin-top: 0;\n    padding: 64px 170px 110px;\n  }\n`;\n\nexport const KeyboardReturnIconWrapperCss = styled(Box)`\n  position: absolute;\n  top: 82px;\n  left: 0;\n  width: 100%;\n  height: 40px;\n  padding-top: 10px;\n  pointer-events: none;\n  background-color: ${theme.palette.primary.bgcUserBlock};\n\n  & svg {\n    margin-left: 20px;\n  }\n\n  ${theme.breakpoints.up('tablet')} {\n    display: none;\n  }\n`;\n\nexport const CloseIconWrapperCss = styled(Box)`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n`;\n\nexport const CloseButtonCss = styled(Button)`\n  min-width: 24px;\n  padding: 0;\n`;\n","import styled from '@emotion/styled';\nimport { Typography } from '@mui/material';\nimport { theme } from '../../constants/theme';\n\nexport const TitleCss = styled(Typography)`\n  text-align: center;\n  margin-bottom: 42px;\n  text-align: left;\n\n  font-family: VerdanaBold;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 25px;\n  color: ${theme.palette.primary.main};\n\n  ${theme.breakpoints.up('tablet')} {\n    margin-bottom: 20px;\n\n    font-size: 26px;\n    line-height: 36px;\n    text-align: center;\n  }\n`;\n\nexport const KcalValueTextCss = styled(Typography)`\n  margin-bottom: 32px;\n\n  font-family: VerdanaBold;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 68px;\n  letter-spacing: 0.04em;\n  color: ${theme.palette.secondary.accent};\n  text-align: center;\n\n  & span {\n    font-size: 16px;\n    line-height: 19px;\n  }\n`;\n","import { useDailyRate } from 'hooks';\nimport { TitleCss, KcalValueTextCss } from './DailyCalorieIntake.styled';\n\nexport const DailyCalorieIntake = () => {\n  const {\n    dailyRate: { dailyRate },\n  } = useDailyRate();\n\n  return (\n    <>\n      <TitleCss component=\"h2\">\n        Your recommended daily calorie intake is\n      </TitleCss>\n      <KcalValueTextCss>\n        {Math.round(dailyRate)} <span>kcal</span>\n      </KcalValueTextCss>\n    </>\n  );\n};\n","import { Virtuoso } from 'react-virtuoso';\nimport { Box, Typography, Button } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { theme } from '../../constants/theme';\n\nexport const TitleCss = styled(Typography)`\n  margin-bottom: 20px;\n  padding-top: 20px;\n\n  font-family: VerdanaBold;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 17px;\n  color: ${theme.palette.primary.main};\n  text-align: left;\n\n  border-top: 1px solid ${theme.palette.primary.grey};\n`;\n\nexport const VirtuosoCss = styled(Virtuoso)`\n  font-size: 14px;\n  line-height: 34px;\n  color: ${theme.palette.primary.darkGrey};\n`;\n\nexport const VirtuosoBoxCss = styled(Box)`\n  &&::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  &&::-webkit-scrollbar-track {\n    background: ${theme.palette.primary.lightGrey};\n  }\n\n  &&::-webkit-scrollbar-thumb {\n    height: 40px;\n    background: ${theme.palette.secondary.accent};\n  }\n`;\n\nexport const BtnBoxCss = styled(Box)`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ButtonSubmitCss = styled(Button)`\n  min-width: 180px;\n  padding: 13px 22px;\n  margin-top: 40px;\n\n  font-family: verdanaBold;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  text-transform: capitalize;\n  color: ${theme.palette.primary.white};\n\n  background-color: ${({ theme }) => theme.palette.primary.accent};\n  border-radius: 30px;\n  box-shadow: 0px 4px 10px 0px ${theme.palette.primary.accent};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.palette.primary.accent};\n    box-shadow: 0px 2px 5px 0px ${theme.palette.primary.accent};\n  }\n`;\n","import React from 'react';\nimport { useDailyRate } from 'hooks';\nimport { NavLink } from 'react-router-dom';\nimport {\n  TitleCss,\n  VirtuosoCss,\n  VirtuosoBoxCss,\n  ButtonSubmitCss,\n  BtnBoxCss,\n} from './NotAllowedProductsList.styled';\n\nexport const NotAllowedProductsList = () => {\n  const {\n    dailyRate: { notAllowedProducts },\n  } = useDailyRate();\n\n  const Scroller = React.forwardRef(({ style, ...props }, ref) => {\n    return (\n      <VirtuosoBoxCss\n        data-virtuoso\n        style={{\n          ...style,\n        }}\n        ref={ref}\n        {...props}\n      />\n    );\n  });\n\n  return (\n    <>\n      <TitleCss component=\"h3\">Foods you should not eats</TitleCss>\n\n      <VirtuosoCss\n        style={{ height: '130px' }}\n        data={notAllowedProducts}\n        totalCount={notAllowedProducts.length}\n        itemContent={index => (\n          <div>\n            {index + 1}. {notAllowedProducts[index]}\n          </div>\n        )}\n        components={{ Scroller }}\n      />\n\n      <BtnBoxCss>\n        <NavLink to=\"/registration\">\n          <ButtonSubmitCss type=\"button\">Start losing weight</ButtonSubmitCss>\n        </NavLink>\n      </BtnBoxCss>\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport * as React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { getDailyRate } from 'redux/dailyRate/dailyRateOperations';\nimport KeyboardReturnIcon from '@mui/icons-material/KeyboardReturn';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { RadioGroup, Radio, FormControlLabel, FormLabel } from '@mui/material';\nimport {\n  SectionCss,\n  TitleCss,\n  FormCss,\n  TextFieldCss,\n  InputWrapperCss,\n  InputGroupBoxCss,\n  FormControlCss,\n  ButtonSubmitCss,\n  ModalCss,\n  ModalBoxContentCss,\n  KeyboardReturnIconWrapperCss,\n  CloseIconWrapperCss,\n  CloseButtonCss,\n} from './CalculateForm.styled';\nimport { DailyCalorieIntake } from '../DailyCalorieIntake';\nimport { NotAllowedProductsList } from '../NotAllowedProductsList';\nimport LinearIndeterminate from '../ProgressLine/ProgressLine';\nimport { useDailyRate } from 'hooks';\nimport { useScreenSize } from '../../hooks/useScreenSize';\nimport { theme } from '../../constants/theme';\n\nconst calculateFormValidationSchema = yup.object().shape({\n  height: yup\n    .number('Enter your height')\n    .integer('An integer value must be entered')\n    .min(120, 'Value must not be less than 120 (cm)')\n    .max(220, 'Value should not exceed 220 (cm)')\n    .required('Height is required'),\n  age: yup\n    .number('Enter your age')\n    .integer('An integer value must be entered')\n    .min(18, 'Value must not be less than 18 (years)')\n    .max(70, 'Value should not exceed 70 (years)')\n    .required('Age is required'),\n  currentWeight: yup\n    .number('Enter your current weight')\n    .integer('An integer value must be entered')\n    .min(35, 'Value must not be less than 35 (kg)')\n    .max(180, 'Value should not exceed 180 (kg)')\n    .required('Current weight is required'),\n  desiredWeight: yup\n    .number('Enter your desired weight')\n    .integer('An integer value must be entered')\n    .min(35, 'Value must not be less than 35 (kg)')\n    .max(180, 'Value should not exceed 180 (kg)')\n    .required('Desired weight is required'),\n  bloodType: yup\n    .string('Enter your blood type')\n    .required('Blood type is required'),\n});\n\nexport const CalculateForm = () => {\n  const dispatch = useDispatch();\n  const screenSize = useScreenSize();\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const formik = useFormik({\n    initialValues: {\n      height: '',\n      age: '',\n      currentWeight: '',\n      desiredWeight: '',\n      bloodType: '1',\n    },\n\n    validationSchema: calculateFormValidationSchema,\n\n    onSubmit: (values, { resetForm, setSubmitting }) => {\n      const payload = {\n        height: values.height,\n        age: values.age,\n        weight: values.currentWeight,\n        desiredWeight: values.desiredWeight,\n        bloodType: Number(values.bloodType),\n      };\n      dispatch(getDailyRate(payload)).finally(() => {\n        setSubmitting(true);\n      });\n\n      resetForm();\n    },\n  });\n\n  const {\n    dailyRate: { isLoading },\n  } = useDailyRate();\n\n  return (\n    <SectionCss component=\"section\">\n      {isLoading ? <LinearIndeterminate /> : <></>}\n\n      <TitleCss component=\"h1\">\n        Calculate your daily calorie intake right now\n      </TitleCss>\n\n      <FormCss onSubmit={formik.handleSubmit}>\n        <InputWrapperCss>\n          <InputGroupBoxCss>\n            <TextFieldCss\n              variant=\"standard\"\n              id=\"height\"\n              name=\"height\"\n              label=\"Height *\"\n              type=\"number\"\n              value={formik.values.height}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.height && Boolean(formik.errors.height)}\n              helperText={formik.touched.height && formik.errors.height}\n            />\n\n            <TextFieldCss\n              variant=\"standard\"\n              id=\"age\"\n              name=\"age\"\n              label=\"Age *\"\n              type=\"number\"\n              value={formik.values.age}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.age && Boolean(formik.errors.age)}\n              helperText={formik.touched.age && formik.errors.age}\n            />\n\n            <TextFieldCss\n              variant=\"standard\"\n              id=\"currentWeight\"\n              name=\"currentWeight\"\n              label=\"Current weight *\"\n              type=\"number\"\n              value={formik.values.currentWeight}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={\n                formik.touched.currentWeight &&\n                Boolean(formik.errors.currentWeight)\n              }\n              helperText={\n                formik.touched.currentWeight && formik.errors.currentWeight\n              }\n            />\n          </InputGroupBoxCss>\n\n          <InputGroupBoxCss>\n            <TextFieldCss\n              variant=\"standard\"\n              id=\"desiredWeight\"\n              name=\"desiredWeight\"\n              label=\"Desired weight *\"\n              type=\"number\"\n              value={formik.values.desiredWeight}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={\n                formik.touched.desiredWeight &&\n                Boolean(formik.errors.desiredWeight)\n              }\n              helperText={\n                formik.touched.desiredWeight && formik.errors.desiredWeight\n              }\n            />\n\n            <FormControlCss>\n              <FormLabel id=\"bloodType\">Blood type *</FormLabel>\n\n              <RadioGroup\n                row\n                aria-labelledby=\"bloodType\"\n                name=\"bloodType\"\n                value={formik.values.bloodType}\n                onChange={formik.handleChange}\n              >\n                <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n                <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n                <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n                <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n              </RadioGroup>\n            </FormControlCss>\n          </InputGroupBoxCss>\n        </InputWrapperCss>\n\n        <ButtonSubmitCss type=\"submit\" onClick={handleOpen}>\n          Start losing weight\n        </ButtonSubmitCss>\n      </FormCss>\n\n      {formik.isValid && formik.isSubmitting ? (\n        <ModalCss\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <ModalBoxContentCss>\n            {screenSize.width < theme.breakpoints.values.tablet ? (\n              <KeyboardReturnIconWrapperCss>\n                <KeyboardReturnIcon />\n              </KeyboardReturnIconWrapperCss>\n            ) : (\n              <CloseIconWrapperCss>\n                <CloseButtonCss type=\"button\" onClick={handleClose}>\n                  <CloseIcon />\n                </CloseButtonCss>\n              </CloseIconWrapperCss>\n            )}\n\n            <DailyCalorieIntake />\n\n            <NotAllowedProductsList />\n          </ModalBoxContentCss>\n        </ModalCss>\n      ) : (\n        <></>\n      )}\n    </SectionCss>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { CalculateForm } from '../components/CalculateForm';\n\nconst Home = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>SlimMom | Home</title>\n      </Helmet>\n\n      <CalculateForm />\n    </HelmetProvider>\n  );\n};\n\nexport default Home;\n"],"names":["BoxCss","styled","Box","themeProgressLine","createTheme","palette","primary","orange","LinearIndeterminate","ThemeProvider","theme","LinearProgress","useScreenSize","useState","width","window","innerWidth","height","innerHeight","screenSize","setScreenSize","useEffect","handleResize","addEventListener","removeEventListener","SectionCss","TitleCss","Typography","FormCss","TextFieldCss","TextField","InputWrapperCss","InputGroupBoxCss","FormControlCss","FormControl","ButtonSubmitCss","Button","accent","ModalCss","Modal","ModalBoxContentCss","KeyboardReturnIconWrapperCss","CloseIconWrapperCss","CloseButtonCss","KcalValueTextCss","DailyCalorieIntake","dailyRate","useDailyRate","component","Math","round","VirtuosoCss","Virtuoso","VirtuosoBoxCss","BtnBoxCss","NotAllowedProductsList","notAllowedProducts","Scroller","React","ref","style","props","data","totalCount","length","itemContent","index","components","to","type","calculateFormValidationSchema","yup","shape","integer","min","max","required","age","currentWeight","desiredWeight","bloodType","CalculateForm","dispatch","useDispatch","open","setOpen","handleClose","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","setSubmitting","payload","weight","Number","getDailyRate","finally","isLoading","handleSubmit","variant","id","name","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","onClick","isValid","isSubmitting","onClose","KeyboardReturn","Close"],"sourceRoot":""}