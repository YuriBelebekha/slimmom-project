{"version":3,"file":"static/js/539.eca10108.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ButtonSubmit/ButtonSubmit.styled.jsx","components/ButtonSubmit/ButtonSubmit.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import { Button } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { theme } from '../../constants/theme';\n\nexport const ButtonCss = styled(Button)`\n  min-width: 180px;\n  padding: 11px 22px;\n  margin-top: 20px;\n\n  font-family: verdanaBold;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  text-transform: capitalize;\n  color: ${theme.palette.primary.accent};\n\n  background-color: ${theme.palette.primary.white};\n\n  border: 2px solid ${theme.palette.primary.accent};\n  border-radius: 30px;\n\n  transition: background-color ${theme.transitions.duration.standard}ms\n      ${theme.transitions.easing.easeOut},\n    color ${theme.transitions.duration.standard}ms\n      ${theme.transitions.easing.easeOut};\n\n  &:hover {\n    background-color: ${theme.palette.primary.accent};\n    border: 2px solid ${theme.palette.primary.accent};\n    color: ${theme.palette.primary.white};\n  }\n\n  ${theme.breakpoints.up('tablet')} {\n    margin-top: 0;\n    margin-left: 32px;\n  }\n`;\n","import { ButtonCss } from './Button.styled';\n\nexport const Button = ({ name }) => {  \n  return (\n    <ButtonCss type=\"button\" variant=\"outlined\" >\n      {name}\n    </ButtonCss>\n  )\n};","import { Button } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { theme } from '../../constants/theme';\n\nexport const ButtonSubmitCss = styled(Button)`\n  min-width: 180px;\n  padding: 13px 22px;\n\n  font-family: verdanaBold;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  text-transform: capitalize;\n\n  background-color: ${({ theme }) => theme.palette.primary.accent};\n  border-radius: 30px;\n  box-shadow: 0px 4px 10px 0px ${theme.palette.primary.accent};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.palette.primary.accent};\n    box-shadow: 0px 2px 5px 0px ${theme.palette.primary.accent};\n  }\n`;\n","import { ButtonSubmitCss } from './ButtonSubmit.styled';\n\nexport const ButtonSubmit = ({ name }) => {  \n  return (\n    <ButtonSubmitCss type=\"submit\" variant=\"contained\" >\n      {name}\n    </ButtonSubmitCss>\n  )\n};","import styled from '@emotion/styled';\nimport { Box, Typography, TextField } from '@mui/material';\nimport { theme } from '../../constants/theme';\n\nexport const TitleCss = styled(Typography)`\n  text-align: center;\n  margin-bottom: 55px;\n\n  font-family: VerdanaBold;\n  font-weight: 700;\n  font-size: 14px;\n  text-transform: uppercase;\n  line-height: 17px;\n  letter-spacing: 0.04em;\n  color: ${theme.palette.primary.accent};\n\n  ${theme.breakpoints.up('tablet')} {\n    text-align: left;\n  }\n`;\n\nexport const FormCss = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${theme.breakpoints.up('tablet')} {\n    align-items: start;\n  }\n`;\n\nexport const TextFieldCss = styled(TextField)`\n  width: 280px;\n  padding: 4px 0;\n  margin-bottom: 32px;\n\n  & label {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n  }\n\n  & label.Mui-focused {\n    color: ${theme.palette.primary.accent};\n  }\n\n  & .MuiInput-underline:after {\n    border-bottom-color: ${theme.palette.primary.accent};\n  }\n\n  & .MuiInput-root {\n    font-family: VerdanaBold;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 17px;\n    letter-spacing: 0.04em;\n    background: transparent;\n  }\n\n  & .MuiFormHelperText-root {\n    position: absolute;\n    bottom: -20px;\n  }\n\n  ${theme.breakpoints.up('tablet')} {\n    width: 240px;\n  }\n`;\n\nexport const ButtonsBoxCss = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  margin-top: 28px;\n\n  ${theme.breakpoints.up('tablet')} {\n    flex-direction: row;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\n\nimport { NavLink } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Box } from '@mui/material';\nimport {\n  TitleCss,\n  FormCss,\n  TextFieldCss,\n  ButtonsBoxCss,\n} from './LoginForm.styled';\nimport { ButtonSubmit } from '../ButtonSubmit/ButtonSubmit';\nimport { Button } from '../Button/Button';\n\nconst loginFormValidationSchema = yup.object().shape({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n\n    validationSchema: loginFormValidationSchema,\n\n    onSubmit: (values, { resetForm, setSubmitting }) => {\n      console.log(values);\n\n      const payload = {\n        email: values.email,\n        password: values.password,\n      };\n      dispatch(login(payload)).finally(() => {\n        setSubmitting(false);\n      });\n\n      resetForm();\n    },\n  });\n\n  return (\n    <Box component=\"section\">\n      <TitleCss component=\"h1\">Log In</TitleCss>\n\n      <FormCss onSubmit={formik.handleSubmit}>\n        <TextFieldCss\n          variant=\"standard\"\n          id=\"email\"\n          name=\"email\"\n          label=\"Email *\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n\n        <TextFieldCss\n          variant=\"standard\"\n          id=\"password\"\n          name=\"password\"\n          label=\"Password *\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n\n        <ButtonsBoxCss>\n          <ButtonSubmit name=\"Log In\" />\n\n          <NavLink to=\"/registration\">\n            <Button name=\"Register\" />\n          </NavLink>\n        </ButtonsBoxCss>\n      </FormCss>\n    </Box>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { LoginForm } from '../../components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>SlimMom | Login</title>\n      </Helmet>\n\n      <LoginForm />\n    </HelmetProvider>\n  )\n};\n\nexport default Login;"],"names":["ButtonCss","styled","Button","theme","name","type","variant","ButtonSubmitCss","palette","primary","accent","ButtonSubmit","TitleCss","Typography","FormCss","TextFieldCss","TextField","ButtonsBoxCss","Box","loginFormValidationSchema","yup","shape","email","required","password","min","LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","setSubmitting","console","log","payload","login","finally","component","handleSubmit","id","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","to"],"sourceRoot":""}